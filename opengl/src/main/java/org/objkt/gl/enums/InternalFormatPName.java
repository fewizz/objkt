package org.objkt.gl.enums;

import java.util.*;
import org.objkt.gl.GLConstants;

public enum InternalFormatPName {
	NUM_SAMPLE_COUNTS(GLConstants.GL_NUM_SAMPLE_COUNTS),
	SAMPLES(GLConstants.GL_SAMPLES),
	INTERNALFORMAT_SUPPORTED(GLConstants.GL_INTERNALFORMAT_SUPPORTED),
	INTERNALFORMAT_PREFERRED(GLConstants.GL_INTERNALFORMAT_PREFERRED),
	INTERNALFORMAT_RED_SIZE(GLConstants.GL_INTERNALFORMAT_RED_SIZE),
	INTERNALFORMAT_GREEN_SIZE(GLConstants.GL_INTERNALFORMAT_GREEN_SIZE),
	INTERNALFORMAT_BLUE_SIZE(GLConstants.GL_INTERNALFORMAT_BLUE_SIZE),
	INTERNALFORMAT_ALPHA_SIZE(GLConstants.GL_INTERNALFORMAT_ALPHA_SIZE),
	INTERNALFORMAT_DEPTH_SIZE(GLConstants.GL_INTERNALFORMAT_DEPTH_SIZE),
	INTERNALFORMAT_STENCIL_SIZE(GLConstants.GL_INTERNALFORMAT_STENCIL_SIZE),
	INTERNALFORMAT_SHARED_SIZE(GLConstants.GL_INTERNALFORMAT_SHARED_SIZE),
	INTERNALFORMAT_RED_TYPE(GLConstants.GL_INTERNALFORMAT_RED_TYPE),
	INTERNALFORMAT_GREEN_TYPE(GLConstants.GL_INTERNALFORMAT_GREEN_TYPE),
	INTERNALFORMAT_BLUE_TYPE(GLConstants.GL_INTERNALFORMAT_BLUE_TYPE),
	INTERNALFORMAT_ALPHA_TYPE(GLConstants.GL_INTERNALFORMAT_ALPHA_TYPE),
	INTERNALFORMAT_DEPTH_TYPE(GLConstants.GL_INTERNALFORMAT_DEPTH_TYPE),
	INTERNALFORMAT_STENCIL_TYPE(GLConstants.GL_INTERNALFORMAT_STENCIL_TYPE),
	MAX_WIDTH(GLConstants.GL_MAX_WIDTH),
	MAX_HEIGHT(GLConstants.GL_MAX_HEIGHT),
	MAX_DEPTH(GLConstants.GL_MAX_DEPTH),
	MAX_LAYERS(GLConstants.GL_MAX_LAYERS),
	COLOR_COMPONENTS(GLConstants.GL_COLOR_COMPONENTS),
	COLOR_RENDERABLE(GLConstants.GL_COLOR_RENDERABLE),
	DEPTH_RENDERABLE(GLConstants.GL_DEPTH_RENDERABLE),
	STENCIL_RENDERABLE(GLConstants.GL_STENCIL_RENDERABLE),
	FRAMEBUFFER_RENDERABLE(GLConstants.GL_FRAMEBUFFER_RENDERABLE),
	FRAMEBUFFER_RENDERABLE_LAYERED(GLConstants.GL_FRAMEBUFFER_RENDERABLE_LAYERED),
	FRAMEBUFFER_BLEND(GLConstants.GL_FRAMEBUFFER_BLEND),
	READ_PIXELS(GLConstants.GL_READ_PIXELS),
	READ_PIXELS_FORMAT(GLConstants.GL_READ_PIXELS_FORMAT),
	READ_PIXELS_TYPE(GLConstants.GL_READ_PIXELS_TYPE),
	TEXTURE_IMAGE_FORMAT(GLConstants.GL_TEXTURE_IMAGE_FORMAT),
	TEXTURE_IMAGE_TYPE(GLConstants.GL_TEXTURE_IMAGE_TYPE),
	GET_TEXTURE_IMAGE_FORMAT(GLConstants.GL_GET_TEXTURE_IMAGE_FORMAT),
	GET_TEXTURE_IMAGE_TYPE(GLConstants.GL_GET_TEXTURE_IMAGE_TYPE),
	MIPMAP(GLConstants.GL_MIPMAP),
	GENERATE_MIPMAP(GLConstants.GL_GENERATE_MIPMAP),
	AUTO_GENERATE_MIPMAP(GLConstants.GL_AUTO_GENERATE_MIPMAP),
	COLOR_ENCODING(GLConstants.GL_COLOR_ENCODING),
	SRGB_READ(GLConstants.GL_SRGB_READ),
	SRGB_WRITE(GLConstants.GL_SRGB_WRITE),
	FILTER(GLConstants.GL_FILTER),
	VERTEX_TEXTURE(GLConstants.GL_VERTEX_TEXTURE),
	TESS_CONTROL_TEXTURE(GLConstants.GL_TESS_CONTROL_TEXTURE),
	TESS_EVALUATION_TEXTURE(GLConstants.GL_TESS_EVALUATION_TEXTURE),
	GEOMETRY_TEXTURE(GLConstants.GL_GEOMETRY_TEXTURE),
	FRAGMENT_TEXTURE(GLConstants.GL_FRAGMENT_TEXTURE),
	COMPUTE_TEXTURE(GLConstants.GL_COMPUTE_TEXTURE),
	TEXTURE_SHADOW(GLConstants.GL_TEXTURE_SHADOW),
	TEXTURE_GATHER(GLConstants.GL_TEXTURE_GATHER),
	TEXTURE_GATHER_SHADOW(GLConstants.GL_TEXTURE_GATHER_SHADOW),
	SHADER_IMAGE_LOAD(GLConstants.GL_SHADER_IMAGE_LOAD),
	SHADER_IMAGE_STORE(GLConstants.GL_SHADER_IMAGE_STORE),
	SHADER_IMAGE_ATOMIC(GLConstants.GL_SHADER_IMAGE_ATOMIC),
	IMAGE_TEXEL_SIZE(GLConstants.GL_IMAGE_TEXEL_SIZE),
	IMAGE_COMPATIBILITY_CLASS(GLConstants.GL_IMAGE_COMPATIBILITY_CLASS),
	IMAGE_PIXEL_FORMAT(GLConstants.GL_IMAGE_PIXEL_FORMAT),
	IMAGE_PIXEL_TYPE(GLConstants.GL_IMAGE_PIXEL_TYPE),
	IMAGE_FORMAT_COMPATIBILITY_TYPE(GLConstants.GL_IMAGE_FORMAT_COMPATIBILITY_TYPE),
	SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST(GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST),
	SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST(GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST),
	SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE(GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE),
	SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE(GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE),
	TEXTURE_COMPRESSED(GLConstants.GL_TEXTURE_COMPRESSED),
	TEXTURE_COMPRESSED_BLOCK_WIDTH(GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_WIDTH),
	TEXTURE_COMPRESSED_BLOCK_HEIGHT(GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT),
	TEXTURE_COMPRESSED_BLOCK_SIZE(GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_SIZE),
	CLEAR_BUFFER(GLConstants.GL_CLEAR_BUFFER),
	TEXTURE_VIEW(GLConstants.GL_TEXTURE_VIEW),
	VIEW_COMPATIBILITY_CLASS(GLConstants.GL_VIEW_COMPATIBILITY_CLASS),
	CLEAR_TEXTURE(GLConstants.GL_CLEAR_TEXTURE);

	InternalFormatPName(int token) {
		this.token = token;
	}

	public final int token;

	public static final InternalFormatPName[] VALUES = values();
	private static Map<Integer, InternalFormatPName> getMap() {
		Map<Integer, InternalFormatPName> map = new HashMap<>();
		for(InternalFormatPName val : VALUES) map.put(val.token, val);
		return map;
	}
	private static final Map<Integer, InternalFormatPName> MAP = Collections.unmodifiableMap(getMap());
	public static InternalFormatPName get(int raw) { return MAP.get(raw); }
}