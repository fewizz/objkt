package org.objkt.gl.wrapper;

public abstract class Wrapper  {

	public abstract void glActiveShaderProgram(int pipeline, int program);
	public abstract void glActiveTexture(int texture);
	public abstract void glAttachShader(int program, int shader);
	public abstract void glBeginQuery(int target, int id);
	public abstract void glBeginTransformFeedback(int primitiveMode);
	public abstract void glBindAttribLocation(int program, int index, long name);
	public abstract void glBindBuffer(int target, int buffer);
	public abstract void glBindBufferBase(int target, int index, int buffer);
	public abstract void glBindBufferRange(int target, int index, int buffer, long offset, long size);
	public abstract void glBindFramebuffer(int target, int framebuffer);
	public abstract void glBindImageTexture(int unit, int texture, int level, boolean layered, int layer, int access, int format);
	public abstract void glBindProgramPipeline(int pipeline);
	public abstract void glBindRenderbuffer(int target, int renderbuffer);
	public abstract void glBindSampler(int unit, int sampler);
	public abstract void glBindTexture(int target, int texture);
	public abstract void glBindTransformFeedback(int target, int id);
	public abstract void glBindVertexArray(int array);
	public abstract void glBindVertexBuffer(int bindingindex, int buffer, long offset, int stride);
	public abstract void glBlendColor(float red, float green, float blue, float alpha);
	public abstract void glBlendEquation(int mode);
	public abstract void glBlendEquationSeparate(int modeRGB, int modeAlpha);
	public abstract void glBlendEquationSeparatei(int buf, int modeRGB, int modeAlpha);
	public abstract void glBlendEquationi(int buf, int mode);
	public abstract void glBlendFunc(int sfactor, int dfactor);
	public abstract void glBlendFuncSeparate(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
	public abstract void glBlendFuncSeparatei(int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);
	public abstract void glBlendFunci(int buf, int src, int dst);
	public abstract void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
	public abstract void glBufferData(int target, long size, long data, int usage);
	public abstract void glBufferSubData(int target, long offset, long size, long data);
	public abstract int glCheckFramebufferStatus(int target);
	public abstract void glClear(int mask);
	public abstract void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil);
	public abstract void glClearBufferfv(int buffer, int drawbuffer, long value);
	public abstract void glClearBufferiv(int buffer, int drawbuffer, long value);
	public abstract void glClearBufferuiv(int buffer, int drawbuffer, long value);
	public abstract void glClearColor(float red, float green, float blue, float alpha);
	public abstract void glClearDepthf(float d);
	public abstract void glClearStencil(int s);
	public abstract int glClientWaitSync(long sync, int flags, long timeout);
	public abstract void glColorMask(boolean red, boolean green, boolean blue, boolean alpha);
	public abstract void glColorMaski(int index, boolean r, boolean g, boolean b, boolean a);
	public abstract void glCompileShader(int shader);
	public abstract void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, long data);
	public abstract void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
	public abstract void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, long data);
	public abstract void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long data);
	public abstract void glCopyBufferSubData(int readTarget, int writeTarget, long readOffset, long writeOffset, long size);
	public abstract void glCopyImageSubData(int srcName, int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, int dstName, int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
	public abstract void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border);
	public abstract void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
	public abstract void glCopyTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
	public abstract int glCreateProgram();
	public abstract int glCreateShader(int type);
	public abstract int glCreateShaderProgramv(int type, int count, long strings);
	public abstract void glCullFace(int mode);
	public abstract void glDebugMessageCallback(long callback, long userParam);
	public abstract void glDebugMessageControl(int source, int type, int severity, int count, long ids, boolean enabled);
	public abstract void glDebugMessageInsert(int source, int type, int id, int severity, int length, long buf);
	public abstract void glDeleteBuffers(int n, long buffers);
	public abstract void glDeleteFramebuffers(int n, long framebuffers);
	public abstract void glDeleteProgram(int program);
	public abstract void glDeleteProgramPipelines(int n, long pipelines);
	public abstract void glDeleteQueries(int n, long ids);
	public abstract void glDeleteRenderbuffers(int n, long renderbuffers);
	public abstract void glDeleteSamplers(int count, long samplers);
	public abstract void glDeleteShader(int shader);
	public abstract void glDeleteSync(long sync);
	public abstract void glDeleteTextures(int n, long textures);
	public abstract void glDeleteTransformFeedbacks(int n, long ids);
	public abstract void glDeleteVertexArrays(int n, long arrays);
	public abstract void glDepthFunc(int func);
	public abstract void glDepthMask(boolean flag);
	public abstract void glDepthRangef(float n, float f);
	public abstract void glDetachShader(int program, int shader);
	public abstract void glDisable(int cap);
	public abstract void glDisableVertexAttribArray(int index);
	public abstract void glDisablei(int target, int index);
	public abstract void glDispatchCompute(int num_groups_x, int num_groups_y, int num_groups_z);
	public abstract void glDispatchComputeIndirect(long indirect);
	public abstract void glDrawArrays(int mode, int first, int count);
	public abstract void glDrawArraysIndirect(int mode, long indirect);
	public abstract void glDrawArraysInstanced(int mode, int first, int count, int instancecount);
	public abstract void glDrawBuffers(int n, long bufs);
	public abstract void glDrawElements(int mode, int count, int type, long indices);
	public abstract void glDrawElementsBaseVertex(int mode, int count, int type, long indices, int basevertex);
	public abstract void glDrawElementsIndirect(int mode, int type, long indirect);
	public abstract void glDrawElementsInstanced(int mode, int count, int type, long indices, int instancecount);
	public abstract void glDrawElementsInstancedBaseVertex(int mode, int count, int type, long indices, int instancecount, int basevertex);
	public abstract void glDrawRangeElements(int mode, int start, int end, int count, int type, long indices);
	public abstract void glDrawRangeElementsBaseVertex(int mode, int start, int end, int count, int type, long indices, int basevertex);
	public abstract void glEnable(int cap);
	public abstract void glEnableVertexAttribArray(int index);
	public abstract void glEnablei(int target, int index);
	public abstract void glEndQuery(int target);
	public abstract void glEndTransformFeedback();
	public abstract long glFenceSync(int condition, int flags);
	public abstract void glFinish();
	public abstract void glFlush();
	public abstract void glFlushMappedBufferRange(int target, long offset, long length);
	public abstract void glFramebufferParameteri(int target, int pname, int param);
	public abstract void glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer);
	public abstract void glFramebufferTexture(int target, int attachment, int texture, int level);
	public abstract void glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level);
	public abstract void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);
	public abstract void glFrontFace(int mode);
	public abstract void glGenBuffers(int n, long buffers);
	public abstract void glGenFramebuffers(int n, long framebuffers);
	public abstract void glGenProgramPipelines(int n, long pipelines);
	public abstract void glGenQueries(int n, long ids);
	public abstract void glGenRenderbuffers(int n, long renderbuffers);
	public abstract void glGenSamplers(int count, long samplers);
	public abstract void glGenTextures(int n, long textures);
	public abstract void glGenTransformFeedbacks(int n, long ids);
	public abstract void glGenVertexArrays(int n, long arrays);
	public abstract void glGenerateMipmap(int target);
	public abstract void glGetActiveAttrib(int program, int index, int bufSize, long length, long size, long type, long name);
	public abstract void glGetActiveUniform(int program, int index, int bufSize, long length, long size, long type, long name);
	public abstract void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, long length, long uniformBlockName);
	public abstract void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, long params);
	public abstract void glGetActiveUniformsiv(int program, int uniformCount, long uniformIndices, int pname, long params);
	public abstract void glGetAttachedShaders(int program, int maxCount, long count, long shaders);
	public abstract int glGetAttribLocation(int program, long name);
	public abstract void glGetBooleani_v(int target, int index, long data);
	public abstract void glGetBooleanv(int pname, long data);
	public abstract void glGetBufferParameteri64v(int target, int pname, long params);
	public abstract void glGetBufferParameteriv(int target, int pname, long params);
	public abstract void glGetBufferPointerv(int target, int pname, long params);
	public abstract int glGetDebugMessageLog(int count, int bufSize, long sources, long types, long ids, long severities, long lengths, long messageLog);
	public abstract int glGetError();
	public abstract void glGetFloatv(int pname, long data);
	public abstract int glGetFragDataLocation(int program, long name);
	public abstract void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, long params);
	public abstract void glGetFramebufferParameteriv(int target, int pname, long params);
	public abstract int glGetGraphicsResetStatus();
	public abstract void glGetInteger64i_v(int target, int index, long data);
	public abstract void glGetInteger64v(int pname, long data);
	public abstract void glGetIntegeri_v(int target, int index, long data);
	public abstract void glGetIntegerv(int pname, long data);
	public abstract void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, long params);
	public abstract void glGetMultisamplefv(int pname, int index, long val);
	public abstract void glGetObjectLabel(int identifier, int name, int bufSize, long length, long label);
	public abstract void glGetObjectPtrLabel(long ptr, int bufSize, long length, long label);
	public abstract void glGetPointerv(int pname, long params);
	public abstract void glGetProgramBinary(int program, int bufSize, long length, long binaryFormat, long binary);
	public abstract void glGetProgramInfoLog(int program, int bufSize, long length, long infoLog);
	public abstract void glGetProgramInterfaceiv(int program, int programInterface, int pname, long params);
	public abstract void glGetProgramPipelineInfoLog(int pipeline, int bufSize, long length, long infoLog);
	public abstract void glGetProgramPipelineiv(int pipeline, int pname, long params);
	public abstract int glGetProgramResourceIndex(int program, int programInterface, long name);
	public abstract int glGetProgramResourceLocation(int program, int programInterface, long name);
	public abstract void glGetProgramResourceName(int program, int programInterface, int index, int bufSize, long length, long name);
	public abstract void glGetProgramResourceiv(int program, int programInterface, int index, int propCount, long props, int bufSize, long length, long params);
	public abstract void glGetProgramiv(int program, int pname, long params);
	public abstract void glGetQueryObjectuiv(int id, int pname, long params);
	public abstract void glGetQueryiv(int target, int pname, long params);
	public abstract void glGetRenderbufferParameteriv(int target, int pname, long params);
	public abstract void glGetSamplerParameterIiv(int sampler, int pname, long params);
	public abstract void glGetSamplerParameterIuiv(int sampler, int pname, long params);
	public abstract void glGetSamplerParameterfv(int sampler, int pname, long params);
	public abstract void glGetSamplerParameteriv(int sampler, int pname, long params);
	public abstract void glGetShaderInfoLog(int shader, int bufSize, long length, long infoLog);
	public abstract void glGetShaderPrecisionFormat(int shadertype, int precisiontype, long range, long precision);
	public abstract void glGetShaderSource(int shader, int bufSize, long length, long source);
	public abstract void glGetShaderiv(int shader, int pname, long params);
	public abstract long glGetString(int name);
	public abstract long glGetStringi(int name, int index);
	public abstract void glGetSynciv(long sync, int pname, int bufSize, long length, long values);
	public abstract void glGetTexLevelParameterfv(int target, int level, int pname, long params);
	public abstract void glGetTexLevelParameteriv(int target, int level, int pname, long params);
	public abstract void glGetTexParameterIiv(int target, int pname, long params);
	public abstract void glGetTexParameterIuiv(int target, int pname, long params);
	public abstract void glGetTexParameterfv(int target, int pname, long params);
	public abstract void glGetTexParameteriv(int target, int pname, long params);
	public abstract void glGetTransformFeedbackVarying(int program, int index, int bufSize, long length, long size, long type, long name);
	public abstract int glGetUniformBlockIndex(int program, long uniformBlockName);
	public abstract void glGetUniformIndices(int program, int uniformCount, long uniformNames, long uniformIndices);
	public abstract int glGetUniformLocation(int program, long name);
	public abstract void glGetUniformfv(int program, int location, long params);
	public abstract void glGetUniformiv(int program, int location, long params);
	public abstract void glGetUniformuiv(int program, int location, long params);
	public abstract void glGetVertexAttribIiv(int index, int pname, long params);
	public abstract void glGetVertexAttribIuiv(int index, int pname, long params);
	public abstract void glGetVertexAttribPointerv(int index, int pname, long pointer);
	public abstract void glGetVertexAttribfv(int index, int pname, long params);
	public abstract void glGetVertexAttribiv(int index, int pname, long params);
	public abstract void glGetnUniformfv(int program, int location, int bufSize, long params);
	public abstract void glGetnUniformiv(int program, int location, int bufSize, long params);
	public abstract void glGetnUniformuiv(int program, int location, int bufSize, long params);
	public abstract void glHint(int target, int mode);
	public abstract void glInvalidateFramebuffer(int target, int numAttachments, long attachments);
	public abstract void glInvalidateSubFramebuffer(int target, int numAttachments, long attachments, int x, int y, int width, int height);
	public abstract boolean glIsBuffer(int buffer);
	public abstract boolean glIsEnabled(int cap);
	public abstract boolean glIsEnabledi(int target, int index);
	public abstract boolean glIsFramebuffer(int framebuffer);
	public abstract boolean glIsProgram(int program);
	public abstract boolean glIsProgramPipeline(int pipeline);
	public abstract boolean glIsQuery(int id);
	public abstract boolean glIsRenderbuffer(int renderbuffer);
	public abstract boolean glIsSampler(int sampler);
	public abstract boolean glIsShader(int shader);
	public abstract boolean glIsSync(long sync);
	public abstract boolean glIsTexture(int texture);
	public abstract boolean glIsTransformFeedback(int id);
	public abstract boolean glIsVertexArray(int array);
	public abstract void glLineWidth(float width);
	public abstract void glLinkProgram(int program);
	public abstract void glLogicOp(int opcode);
	public abstract long glMapBufferRange(int target, long offset, long length, int access);
	public abstract void glMemoryBarrier(int barriers);
	public abstract void glMemoryBarrierByRegion(int barriers);
	public abstract void glMinSampleShading(float value);
	public abstract void glObjectLabel(int identifier, int name, int length, long label);
	public abstract void glObjectPtrLabel(long ptr, int length, long label);
	public abstract void glPatchParameteri(int pname, int value);
	public abstract void glPauseTransformFeedback();
	public abstract void glPixelStorei(int pname, int param);
	public abstract void glPointParameterf(int pname, float param);
	public abstract void glPointParameterfv(int pname, long params);
	public abstract void glPointSize(float size);
	public abstract void glPolygonOffset(float factor, float units);
	public abstract void glPopDebugGroup();
	public abstract void glProgramBinary(int program, int binaryFormat, long binary, int length);
	public abstract void glProgramParameteri(int program, int pname, int value);
	public abstract void glProgramUniform1f(int program, int location, float v0);
	public abstract void glProgramUniform1fv(int program, int location, int count, long value);
	public abstract void glProgramUniform1i(int program, int location, int v0);
	public abstract void glProgramUniform1iv(int program, int location, int count, long value);
	public abstract void glProgramUniform1ui(int program, int location, int v0);
	public abstract void glProgramUniform1uiv(int program, int location, int count, long value);
	public abstract void glProgramUniform2f(int program, int location, float v0, float v1);
	public abstract void glProgramUniform2fv(int program, int location, int count, long value);
	public abstract void glProgramUniform2i(int program, int location, int v0, int v1);
	public abstract void glProgramUniform2iv(int program, int location, int count, long value);
	public abstract void glProgramUniform2ui(int program, int location, int v0, int v1);
	public abstract void glProgramUniform2uiv(int program, int location, int count, long value);
	public abstract void glProgramUniform3f(int program, int location, float v0, float v1, float v2);
	public abstract void glProgramUniform3fv(int program, int location, int count, long value);
	public abstract void glProgramUniform3i(int program, int location, int v0, int v1, int v2);
	public abstract void glProgramUniform3iv(int program, int location, int count, long value);
	public abstract void glProgramUniform3ui(int program, int location, int v0, int v1, int v2);
	public abstract void glProgramUniform3uiv(int program, int location, int count, long value);
	public abstract void glProgramUniform4f(int program, int location, float v0, float v1, float v2, float v3);
	public abstract void glProgramUniform4fv(int program, int location, int count, long value);
	public abstract void glProgramUniform4i(int program, int location, int v0, int v1, int v2, int v3);
	public abstract void glProgramUniform4iv(int program, int location, int count, long value);
	public abstract void glProgramUniform4ui(int program, int location, int v0, int v1, int v2, int v3);
	public abstract void glProgramUniform4uiv(int program, int location, int count, long value);
	public abstract void glProgramUniformMatrix2fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix2x3fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix2x4fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3x2fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3x4fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4x2fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4x3fv(int program, int location, int count, boolean transpose, long value);
	public abstract void glPushDebugGroup(int source, int id, int length, long message);
	public abstract void glReadBuffer(int src);
	public abstract void glReadPixels(int x, int y, int width, int height, int format, int type, long pixels);
	public abstract void glReadnPixels(int x, int y, int width, int height, int format, int type, int bufSize, long data);
	public abstract void glReleaseShaderCompiler();
	public abstract void glRenderbufferStorage(int target, int internalformat, int width, int height);
	public abstract void glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height);
	public abstract void glResumeTransformFeedback();
	public abstract void glSampleCoverage(float value, boolean invert);
	public abstract void glSampleMaski(int maskNumber, int mask);
	public abstract void glSamplerParameterIiv(int sampler, int pname, long param);
	public abstract void glSamplerParameterIuiv(int sampler, int pname, long param);
	public abstract void glSamplerParameterf(int sampler, int pname, float param);
	public abstract void glSamplerParameterfv(int sampler, int pname, long param);
	public abstract void glSamplerParameteri(int sampler, int pname, int param);
	public abstract void glSamplerParameteriv(int sampler, int pname, long param);
	public abstract void glScissor(int x, int y, int width, int height);
	public abstract void glShaderBinary(int count, long shaders, int binaryformat, long binary, int length);
	public abstract void glShaderSource(int shader, int count, long string, long length);
	public abstract void glStencilFunc(int func, int ref, int mask);
	public abstract void glStencilFuncSeparate(int face, int func, int ref, int mask);
	public abstract void glStencilMask(int mask);
	public abstract void glStencilMaskSeparate(int face, int mask);
	public abstract void glStencilOp(int fail, int zfail, int zpass);
	public abstract void glStencilOpSeparate(int face, int sfail, int dpfail, int dppass);
	public abstract void glTexBuffer(int target, int internalformat, int buffer);
	public abstract void glTexBufferRange(int target, int internalformat, int buffer, long offset, long size);
	public abstract void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, long pixels);
	public abstract void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, long pixels);
	public abstract void glTexParameterIiv(int target, int pname, long params);
	public abstract void glTexParameterIuiv(int target, int pname, long params);
	public abstract void glTexParameterf(int target, int pname, float param);
	public abstract void glTexParameterfv(int target, int pname, long params);
	public abstract void glTexParameteri(int target, int pname, int param);
	public abstract void glTexParameteriv(int target, int pname, long params);
	public abstract void glTexStorage2D(int target, int levels, int internalformat, int width, int height);
	public abstract void glTexStorage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
	public abstract void glTexStorage3D(int target, int levels, int internalformat, int width, int height, int depth);
	public abstract void glTexStorage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);
	public abstract void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, long pixels);
	public abstract void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, long pixels);
	public abstract void glTransformFeedbackVaryings(int program, int count, long varyings, int bufferMode);
	public abstract void glUniform1f(int location, float v0);
	public abstract void glUniform1fv(int location, int count, long value);
	public abstract void glUniform1i(int location, int v0);
	public abstract void glUniform1iv(int location, int count, long value);
	public abstract void glUniform1ui(int location, int v0);
	public abstract void glUniform1uiv(int location, int count, long value);
	public abstract void glUniform2f(int location, float v0, float v1);
	public abstract void glUniform2fv(int location, int count, long value);
	public abstract void glUniform2i(int location, int v0, int v1);
	public abstract void glUniform2iv(int location, int count, long value);
	public abstract void glUniform2ui(int location, int v0, int v1);
	public abstract void glUniform2uiv(int location, int count, long value);
	public abstract void glUniform3f(int location, float v0, float v1, float v2);
	public abstract void glUniform3fv(int location, int count, long value);
	public abstract void glUniform3i(int location, int v0, int v1, int v2);
	public abstract void glUniform3iv(int location, int count, long value);
	public abstract void glUniform3ui(int location, int v0, int v1, int v2);
	public abstract void glUniform3uiv(int location, int count, long value);
	public abstract void glUniform4f(int location, float v0, float v1, float v2, float v3);
	public abstract void glUniform4fv(int location, int count, long value);
	public abstract void glUniform4i(int location, int v0, int v1, int v2, int v3);
	public abstract void glUniform4iv(int location, int count, long value);
	public abstract void glUniform4ui(int location, int v0, int v1, int v2, int v3);
	public abstract void glUniform4uiv(int location, int count, long value);
	public abstract void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding);
	public abstract void glUniformMatrix2fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix2x3fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix2x4fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3x2fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3x4fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4x2fv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4x3fv(int location, int count, boolean transpose, long value);
	public abstract boolean glUnmapBuffer(int target);
	public abstract void glUseProgram(int program);
	public abstract void glUseProgramStages(int pipeline, int stages, int program);
	public abstract void glValidateProgram(int program);
	public abstract void glValidateProgramPipeline(int pipeline);
	public abstract void glVertexAttrib1f(int index, float x);
	public abstract void glVertexAttrib1fv(int index, long v);
	public abstract void glVertexAttrib2f(int index, float x, float y);
	public abstract void glVertexAttrib2fv(int index, long v);
	public abstract void glVertexAttrib3f(int index, float x, float y, float z);
	public abstract void glVertexAttrib3fv(int index, long v);
	public abstract void glVertexAttrib4f(int index, float x, float y, float z, float w);
	public abstract void glVertexAttrib4fv(int index, long v);
	public abstract void glVertexAttribBinding(int attribindex, int bindingindex);
	public abstract void glVertexAttribDivisor(int index, int divisor);
	public abstract void glVertexAttribFormat(int attribindex, int size, int type, boolean normalized, int relativeoffset);
	public abstract void glVertexAttribI4i(int index, int x, int y, int z, int w);
	public abstract void glVertexAttribI4iv(int index, long v);
	public abstract void glVertexAttribI4ui(int index, int x, int y, int z, int w);
	public abstract void glVertexAttribI4uiv(int index, long v);
	public abstract void glVertexAttribIFormat(int attribindex, int size, int type, int relativeoffset);
	public abstract void glVertexAttribIPointer(int index, int size, int type, int stride, long pointer);
	public abstract void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, long pointer);
	public abstract void glVertexBindingDivisor(int bindingindex, int divisor);
	public abstract void glViewport(int x, int y, int width, int height);
	public abstract void glWaitSync(long sync, int flags, long timeout);}