package org.objkt.gl.wrapper;

import org.objkt.gl.enums.*;

public abstract class GLWrapper extends Wrapper {

	public abstract void glBeginConditionalRender(int id, int mode);
	public abstract void glBeginQueryIndexed(int target, int index, int id);
	public abstract void glBindBuffersBase(int target, int first, int count, long buffers);
	public abstract void glBindBuffersRange(int target, int first, int count, long buffers, long offsets, long sizes);
	public abstract void glBindFragDataLocation(int program, int color, long name);
	public abstract void glBindFragDataLocationIndexed(int program, int colorNumber, int index, long name);
	public abstract void glBindImageTextures(int first, int count, long textures);
	public abstract void glBindSamplers(int first, int count, long samplers);
	public abstract void glBindTextureUnit(int unit, int texture);
	public abstract void glBindTextures(int first, int count, long textures);
	public abstract void glBindVertexBuffers(int first, int count, long buffers, long offsets, long strides);
	public abstract void glBlitNamedFramebuffer(int readFramebuffer, int drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
	public abstract void glBufferStorage(int target, long size, long data, int flags);
	public abstract int glCheckNamedFramebufferStatus(int framebuffer, int target);
	public abstract void glClampColor(int target, int clamp);
	public abstract void glClearBufferData(int target, int internalformat, int format, int type, long data);
	public abstract void glClearBufferSubData(int target, int internalformat, long offset, long size, int format, int type, long data);
	public abstract void glClearDepth(double depth);
	public abstract void glClearNamedBufferData(int buffer, int internalformat, int format, int type, long data);
	public abstract void glClearNamedBufferSubData(int buffer, int internalformat, long offset, long size, int format, int type, long data);
	public abstract void glClearNamedFramebufferfi(int framebuffer, int buffer, int drawbuffer, float depth, int stencil);
	public abstract void glClearNamedFramebufferfv(int framebuffer, int buffer, int drawbuffer, long value);
	public abstract void glClearNamedFramebufferiv(int framebuffer, int buffer, int drawbuffer, long value);
	public abstract void glClearNamedFramebufferuiv(int framebuffer, int buffer, int drawbuffer, long value);
	public abstract void glClearTexImage(int texture, int level, int format, int type, long data);
	public abstract void glClearTexSubImage(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, long data);
	public abstract void glClipControl(int origin, int depth);
	public abstract void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, long data);
	public abstract void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, int imageSize, long data);
	public abstract void glCompressedTextureSubImage1D(int texture, int level, int xoffset, int width, int format, int imageSize, long data);
	public abstract void glCompressedTextureSubImage2D(int texture, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, long data);
	public abstract void glCompressedTextureSubImage3D(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long data);
	public abstract void glCopyNamedBufferSubData(int readBuffer, int writeBuffer, long readOffset, long writeOffset, long size);
	public abstract void glCopyTexImage1D(int target, int level, int internalformat, int x, int y, int width, int border);
	public abstract void glCopyTexSubImage1D(int target, int level, int xoffset, int x, int y, int width);
	public abstract void glCopyTextureSubImage1D(int texture, int level, int xoffset, int x, int y, int width);
	public abstract void glCopyTextureSubImage2D(int texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
	public abstract void glCopyTextureSubImage3D(int texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
	public abstract void glCreateBuffers(int n, long buffers);
	public abstract void glCreateFramebuffers(int n, long framebuffers);
	public abstract void glCreateProgramPipelines(int n, long pipelines);
	public abstract void glCreateQueries(int target, int n, long ids);
	public abstract void glCreateRenderbuffers(int n, long renderbuffers);
	public abstract void glCreateSamplers(int n, long samplers);
	public abstract void glCreateTextures(int target, int n, long textures);
	public abstract void glCreateTransformFeedbacks(int n, long ids);
	public abstract void glCreateVertexArrays(int n, long arrays);
	public abstract void glDepthRange(double near, double far);
	public abstract void glDepthRangeArrayv(int first, int count, long v);
	public abstract void glDepthRangeIndexed(int index, double n, double f);
	public abstract void glDisableVertexArrayAttrib(int vaobj, int index);
	public abstract void glDrawArraysInstancedBaseInstance(int mode, int first, int count, int instancecount, int baseinstance);
	public abstract void glDrawBuffer(int buf);
	public abstract void glDrawElementsInstancedBaseInstance(int mode, int count, int type, long indices, int instancecount, int baseinstance);
	public abstract void glDrawElementsInstancedBaseVertexBaseInstance(int mode, int count, int type, long indices, int instancecount, int basevertex, int baseinstance);
	public abstract void glDrawTransformFeedback(int mode, int id);
	public abstract void glDrawTransformFeedbackInstanced(int mode, int id, int instancecount);
	public abstract void glDrawTransformFeedbackStream(int mode, int id, int stream);
	public abstract void glDrawTransformFeedbackStreamInstanced(int mode, int id, int stream, int instancecount);
	public abstract void glEnableVertexArrayAttrib(int vaobj, int index);
	public abstract void glEndConditionalRender();
	public abstract void glEndQueryIndexed(int target, int index);
	public abstract void glFlushMappedNamedBufferRange(int buffer, long offset, long length);
	public abstract void glFramebufferTexture1D(int target, int attachment, int textarget, int texture, int level);
	public abstract void glFramebufferTexture3D(int target, int attachment, int textarget, int texture, int level, int zoffset);
	public abstract void glGenerateTextureMipmap(int texture);
	public abstract void glGetActiveAtomicCounterBufferiv(int program, int bufferIndex, int pname, long params);
	public abstract void glGetActiveSubroutineName(int program, int shadertype, int index, int bufsize, long length, long name);
	public abstract void glGetActiveSubroutineUniformName(int program, int shadertype, int index, int bufsize, long length, long name);
	public abstract void glGetActiveSubroutineUniformiv(int program, int shadertype, int index, int pname, long values);
	public abstract void glGetActiveUniformName(int program, int uniformIndex, int bufSize, long length, long uniformName);
	public abstract void glGetBufferSubData(int target, long offset, long size, long data);
	public abstract void glGetCompressedTexImage(int target, int level, long img);
	public abstract void glGetCompressedTextureImage(int texture, int level, int bufSize, long pixels);
	public abstract void glGetCompressedTextureSubImage(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, long pixels);
	public abstract void glGetDoublei_v(int target, int index, long data);
	public abstract void glGetDoublev(int pname, long data);
	public abstract void glGetFloati_v(int target, int index, long data);
	public abstract int glGetFragDataIndex(int program, long name);
	public abstract void glGetInternalformati64v(int target, int internalformat, int pname, int bufSize, long params);
	public abstract void glGetNamedBufferParameteri64v(int buffer, int pname, long params);
	public abstract void glGetNamedBufferParameteriv(int buffer, int pname, long params);
	public abstract void glGetNamedBufferPointerv(int buffer, int pname, long params);
	public abstract void glGetNamedBufferSubData(int buffer, long offset, long size, long data);
	public abstract void glGetNamedFramebufferAttachmentParameteriv(int framebuffer, int attachment, int pname, long params);
	public abstract void glGetNamedFramebufferParameteriv(int framebuffer, int pname, long param);
	public abstract void glGetNamedRenderbufferParameteriv(int renderbuffer, int pname, long params);
	public abstract int glGetProgramResourceLocationIndex(int program, int programInterface, long name);
	public abstract void glGetProgramStageiv(int program, int shadertype, int pname, long values);
	public abstract void glGetQueryBufferObjecti64v(int id, int buffer, int pname, long offset);
	public abstract void glGetQueryBufferObjectiv(int id, int buffer, int pname, long offset);
	public abstract void glGetQueryBufferObjectui64v(int id, int buffer, int pname, long offset);
	public abstract void glGetQueryBufferObjectuiv(int id, int buffer, int pname, long offset);
	public abstract void glGetQueryIndexediv(int target, int index, int pname, long params);
	public abstract void glGetQueryObjecti64v(int id, int pname, long params);
	public abstract void glGetQueryObjectiv(int id, int pname, long params);
	public abstract void glGetQueryObjectui64v(int id, int pname, long params);
	public abstract int glGetSubroutineIndex(int program, int shadertype, long name);
	public abstract int glGetSubroutineUniformLocation(int program, int shadertype, long name);
	public abstract void glGetTexImage(int target, int level, int format, int type, long pixels);
	public abstract void glGetTextureImage(int texture, int level, int format, int type, int bufSize, long pixels);
	public abstract void glGetTextureLevelParameterfv(int texture, int level, int pname, long params);
	public abstract void glGetTextureLevelParameteriv(int texture, int level, int pname, long params);
	public abstract void glGetTextureParameterIiv(int texture, int pname, long params);
	public abstract void glGetTextureParameterIuiv(int texture, int pname, long params);
	public abstract void glGetTextureParameterfv(int texture, int pname, long params);
	public abstract void glGetTextureParameteriv(int texture, int pname, long params);
	public abstract void glGetTextureSubImage(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, int bufSize, long pixels);
	public abstract void glGetTransformFeedbacki64_v(int xfb, int pname, int index, long param);
	public abstract void glGetTransformFeedbacki_v(int xfb, int pname, int index, long param);
	public abstract void glGetTransformFeedbackiv(int xfb, int pname, long param);
	public abstract void glGetUniformSubroutineuiv(int shadertype, int location, long params);
	public abstract void glGetUniformdv(int program, int location, long params);
	public abstract void glGetVertexArrayIndexed64iv(int vaobj, int index, int pname, long param);
	public abstract void glGetVertexArrayIndexediv(int vaobj, int index, int pname, long param);
	public abstract void glGetVertexArrayiv(int vaobj, int pname, long param);
	public abstract void glGetVertexAttribLdv(int index, int pname, long params);
	public abstract void glGetVertexAttribdv(int index, int pname, long params);
	public abstract void glGetnCompressedTexImage(int target, int lod, int bufSize, long pixels);
	public abstract void glGetnTexImage(int target, int level, int format, int type, int bufSize, long pixels);
	public abstract void glGetnUniformdv(int program, int location, int bufSize, long params);
	public abstract void glInvalidateBufferData(int buffer);
	public abstract void glInvalidateBufferSubData(int buffer, long offset, long length);
	public abstract void glInvalidateNamedFramebufferData(int framebuffer, int numAttachments, long attachments);
	public abstract void glInvalidateNamedFramebufferSubData(int framebuffer, int numAttachments, long attachments, int x, int y, int width, int height);
	public abstract void glInvalidateTexImage(int texture, int level);
	public abstract void glInvalidateTexSubImage(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
	public abstract long glMapBuffer(int target, int access);
	public abstract long glMapNamedBuffer(int buffer, int access);
	public abstract long glMapNamedBufferRange(int buffer, long offset, long length, int access);
	public abstract void glMultiDrawArrays(int mode, long first, long count, int drawcount);
	public abstract void glMultiDrawArraysIndirect(int mode, long indirect, int drawcount, int stride);
	public abstract void glMultiDrawArraysIndirectCount(int mode, long indirect, long drawcount, int maxdrawcount, int stride);
	public abstract void glMultiDrawElements(int mode, long count, int type, long indices, int drawcount);
	public abstract void glMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int drawcount, long basevertex);
	public abstract void glMultiDrawElementsIndirect(int mode, int type, long indirect, int drawcount, int stride);
	public abstract void glMultiDrawElementsIndirectCount(int mode, int type, long indirect, long drawcount, int maxdrawcount, int stride);
	public abstract void glNamedBufferData(int buffer, long size, long data, int usage);
	public abstract void glNamedBufferStorage(int buffer, long size, long data, int flags);
	public abstract void glNamedBufferSubData(int buffer, long offset, long size, long data);
	public abstract void glNamedFramebufferDrawBuffer(int framebuffer, int buf);
	public abstract void glNamedFramebufferDrawBuffers(int framebuffer, int n, long bufs);
	public abstract void glNamedFramebufferParameteri(int framebuffer, int pname, int param);
	public abstract void glNamedFramebufferReadBuffer(int framebuffer, int src);
	public abstract void glNamedFramebufferRenderbuffer(int framebuffer, int attachment, int renderbuffertarget, int renderbuffer);
	public abstract void glNamedFramebufferTexture(int framebuffer, int attachment, int texture, int level);
	public abstract void glNamedFramebufferTextureLayer(int framebuffer, int attachment, int texture, int level, int layer);
	public abstract void glNamedRenderbufferStorage(int renderbuffer, int internalformat, int width, int height);
	public abstract void glNamedRenderbufferStorageMultisample(int renderbuffer, int samples, int internalformat, int width, int height);
	public abstract void glPatchParameterfv(int pname, long values);
	public abstract void glPixelStoref(int pname, float param);
	public abstract void glPointParameteri(int pname, int param);
	public abstract void glPointParameteriv(int pname, long params);
	public abstract void glPolygonMode(int face, int mode);
	public abstract void glPolygonOffsetClamp(float factor, float units, float clamp);
	public abstract void glPrimitiveRestartIndex(int index);
	public abstract void glProgramUniform1d(int program, int location, double v0);
	public abstract void glProgramUniform1dv(int program, int location, int count, long value);
	public abstract void glProgramUniform2d(int program, int location, double v0, double v1);
	public abstract void glProgramUniform2dv(int program, int location, int count, long value);
	public abstract void glProgramUniform3d(int program, int location, double v0, double v1, double v2);
	public abstract void glProgramUniform3dv(int program, int location, int count, long value);
	public abstract void glProgramUniform4d(int program, int location, double v0, double v1, double v2, double v3);
	public abstract void glProgramUniform4dv(int program, int location, int count, long value);
	public abstract void glProgramUniformMatrix2dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix2x3dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix2x4dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3x2dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix3x4dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4x2dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProgramUniformMatrix4x3dv(int program, int location, int count, boolean transpose, long value);
	public abstract void glProvokingVertex(int mode);
	public abstract void glQueryCounter(int id, int target);
	public abstract void glScissorArrayv(int first, int count, long v);
	public abstract void glScissorIndexed(int index, int left, int bottom, int width, int height);
	public abstract void glScissorIndexedv(int index, long v);
	public abstract void glShaderStorageBlockBinding(int program, int storageBlockIndex, int storageBlockBinding);
	public abstract void glSpecializeShader(int shader, long pEntryPoint, int numSpecializationConstants, long pConstantIndex, long pConstantValue);
	public abstract void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, long pixels);
	public abstract void glTexImage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
	public abstract void glTexImage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);
	public abstract void glTexStorage1D(int target, int levels, int internalformat, int width);
	public abstract void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, long pixels);
	public abstract void glTextureBarrier();
	public abstract void glTextureBuffer(int texture, int internalformat, int buffer);
	public abstract void glTextureBufferRange(int texture, int internalformat, int buffer, long offset, long size);
	public abstract void glTextureParameterIiv(int texture, int pname, long params);
	public abstract void glTextureParameterIuiv(int texture, int pname, long params);
	public abstract void glTextureParameterf(int texture, int pname, float param);
	public abstract void glTextureParameterfv(int texture, int pname, long param);
	public abstract void glTextureParameteri(int texture, int pname, int param);
	public abstract void glTextureParameteriv(int texture, int pname, long param);
	public abstract void glTextureStorage1D(int texture, int levels, int internalformat, int width);
	public abstract void glTextureStorage2D(int texture, int levels, int internalformat, int width, int height);
	public abstract void glTextureStorage2DMultisample(int texture, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
	public abstract void glTextureStorage3D(int texture, int levels, int internalformat, int width, int height, int depth);
	public abstract void glTextureStorage3DMultisample(int texture, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);
	public abstract void glTextureSubImage1D(int texture, int level, int xoffset, int width, int format, int type, long pixels);
	public abstract void glTextureSubImage2D(int texture, int level, int xoffset, int yoffset, int width, int height, int format, int type, long pixels);
	public abstract void glTextureSubImage3D(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, long pixels);
	public abstract void glTextureView(int texture, int target, int origtexture, int internalformat, int minlevel, int numlevels, int minlayer, int numlayers);
	public abstract void glTransformFeedbackBufferBase(int xfb, int index, int buffer);
	public abstract void glTransformFeedbackBufferRange(int xfb, int index, int buffer, long offset, long size);
	public abstract void glUniform1d(int location, double x);
	public abstract void glUniform1dv(int location, int count, long value);
	public abstract void glUniform2d(int location, double x, double y);
	public abstract void glUniform2dv(int location, int count, long value);
	public abstract void glUniform3d(int location, double x, double y, double z);
	public abstract void glUniform3dv(int location, int count, long value);
	public abstract void glUniform4d(int location, double x, double y, double z, double w);
	public abstract void glUniform4dv(int location, int count, long value);
	public abstract void glUniformMatrix2dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix2x3dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix2x4dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3x2dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix3x4dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4x2dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformMatrix4x3dv(int location, int count, boolean transpose, long value);
	public abstract void glUniformSubroutinesuiv(int shadertype, int count, long indices);
	public abstract boolean glUnmapNamedBuffer(int buffer);
	public abstract void glVertexArrayAttribBinding(int vaobj, int attribindex, int bindingindex);
	public abstract void glVertexArrayAttribFormat(int vaobj, int attribindex, int size, int type, boolean normalized, int relativeoffset);
	public abstract void glVertexArrayAttribIFormat(int vaobj, int attribindex, int size, int type, int relativeoffset);
	public abstract void glVertexArrayAttribLFormat(int vaobj, int attribindex, int size, int type, int relativeoffset);
	public abstract void glVertexArrayBindingDivisor(int vaobj, int bindingindex, int divisor);
	public abstract void glVertexArrayElementBuffer(int vaobj, int buffer);
	public abstract void glVertexArrayVertexBuffer(int vaobj, int bindingindex, int buffer, long offset, int stride);
	public abstract void glVertexArrayVertexBuffers(int vaobj, int first, int count, long buffers, long offsets, long strides);
	public abstract void glVertexAttrib1d(int index, double x);
	public abstract void glVertexAttrib1dv(int index, long v);
	public abstract void glVertexAttrib1s(int index, short x);
	public abstract void glVertexAttrib1sv(int index, long v);
	public abstract void glVertexAttrib2d(int index, double x, double y);
	public abstract void glVertexAttrib2dv(int index, long v);
	public abstract void glVertexAttrib2s(int index, short x, short y);
	public abstract void glVertexAttrib2sv(int index, long v);
	public abstract void glVertexAttrib3d(int index, double x, double y, double z);
	public abstract void glVertexAttrib3dv(int index, long v);
	public abstract void glVertexAttrib3s(int index, short x, short y, short z);
	public abstract void glVertexAttrib3sv(int index, long v);
	public abstract void glVertexAttrib4Nbv(int index, long v);
	public abstract void glVertexAttrib4Niv(int index, long v);
	public abstract void glVertexAttrib4Nsv(int index, long v);
	public abstract void glVertexAttrib4Nub(int index, byte x, byte y, byte z, byte w);
	public abstract void glVertexAttrib4Nubv(int index, long v);
	public abstract void glVertexAttrib4Nuiv(int index, long v);
	public abstract void glVertexAttrib4Nusv(int index, long v);
	public abstract void glVertexAttrib4bv(int index, long v);
	public abstract void glVertexAttrib4d(int index, double x, double y, double z, double w);
	public abstract void glVertexAttrib4dv(int index, long v);
	public abstract void glVertexAttrib4iv(int index, long v);
	public abstract void glVertexAttrib4s(int index, short x, short y, short z, short w);
	public abstract void glVertexAttrib4sv(int index, long v);
	public abstract void glVertexAttrib4ubv(int index, long v);
	public abstract void glVertexAttrib4uiv(int index, long v);
	public abstract void glVertexAttrib4usv(int index, long v);
	public abstract void glVertexAttribI1i(int index, int x);
	public abstract void glVertexAttribI1iv(int index, long v);
	public abstract void glVertexAttribI1ui(int index, int x);
	public abstract void glVertexAttribI1uiv(int index, long v);
	public abstract void glVertexAttribI2i(int index, int x, int y);
	public abstract void glVertexAttribI2iv(int index, long v);
	public abstract void glVertexAttribI2ui(int index, int x, int y);
	public abstract void glVertexAttribI2uiv(int index, long v);
	public abstract void glVertexAttribI3i(int index, int x, int y, int z);
	public abstract void glVertexAttribI3iv(int index, long v);
	public abstract void glVertexAttribI3ui(int index, int x, int y, int z);
	public abstract void glVertexAttribI3uiv(int index, long v);
	public abstract void glVertexAttribI4bv(int index, long v);
	public abstract void glVertexAttribI4sv(int index, long v);
	public abstract void glVertexAttribI4ubv(int index, long v);
	public abstract void glVertexAttribI4usv(int index, long v);
	public abstract void glVertexAttribL1d(int index, double x);
	public abstract void glVertexAttribL1dv(int index, long v);
	public abstract void glVertexAttribL2d(int index, double x, double y);
	public abstract void glVertexAttribL2dv(int index, long v);
	public abstract void glVertexAttribL3d(int index, double x, double y, double z);
	public abstract void glVertexAttribL3dv(int index, long v);
	public abstract void glVertexAttribL4d(int index, double x, double y, double z, double w);
	public abstract void glVertexAttribL4dv(int index, long v);
	public abstract void glVertexAttribLFormat(int attribindex, int size, int type, int relativeoffset);
	public abstract void glVertexAttribLPointer(int index, int size, int type, int stride, long pointer);
	public abstract void glVertexAttribP1ui(int index, int type, boolean normalized, int value);
	public abstract void glVertexAttribP1uiv(int index, int type, boolean normalized, long value);
	public abstract void glVertexAttribP2ui(int index, int type, boolean normalized, int value);
	public abstract void glVertexAttribP2uiv(int index, int type, boolean normalized, long value);
	public abstract void glVertexAttribP3ui(int index, int type, boolean normalized, int value);
	public abstract void glVertexAttribP3uiv(int index, int type, boolean normalized, long value);
	public abstract void glVertexAttribP4ui(int index, int type, boolean normalized, int value);
	public abstract void glVertexAttribP4uiv(int index, int type, boolean normalized, long value);
	public abstract void glViewportArrayv(int first, int count, long v);
	public abstract void glViewportIndexedf(int index, float x, float y, float w, float h);
	public abstract void glViewportIndexedfv(int index, long v);}